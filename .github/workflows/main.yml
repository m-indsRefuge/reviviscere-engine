# .github/workflows/main.yml

name: Reviviscere Engine CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-test:
    name: Run End-to-End Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Docker Compose environment
        run: docker compose up -d

      - name: Wait for services to be ready
        run: sleep 15

      - name: Extract ngrok Tunnel URL
        run: echo "NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')" >> $GITHUB_ENV

      - name: Display ngrok URL
        run: echo "Tunnel is live at ${{ env.NGROK_URL }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wrangler
        run: npm install -g wrangler

      # --- MODIFIED: Use the correct --config flag for the wrangler deploy command ---
      - name: Deploy to Cloudflare Preview and capture URL
        id: deploy_preview
        run: |
          output=$(wrangler deploy --config ./agents/watchtower/wrangler.toml --var WATCHTOWER_MODEL_URL:${{ env.NGROK_URL }} --outdir=dist-preview)
          echo "worker_url=$(echo "$output" | grep -o 'https://[^ ]*workers.dev')" >> $GITHUB_OUTPUT

      - name: Install Watchtower test dependencies
        run: npm --prefix ./agents/watchtower install

      - name: Run Vitest E2E tests against Preview
        env:
          BASE_URL: ${{ steps.deploy_preview.outputs.worker_url }}
        run: npx vitest run --root ./agents/watchtower

      - name: Teardown Docker Compose environment
        if: always()
        run: docker compose down
  
  deploy:
    name: Deploy to Cloudflare Production
    runs-on: ubuntu-latest
    needs: e2e-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Watchtower Agent
        if: contains(github.event.head_commit.modified, 'agents/watchtower/')
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: deploy --config ./agents/watchtower/wrangler.toml
